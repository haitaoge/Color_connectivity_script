%%*************     AFFICHAGE     *****************

    hold on

    set(hdl.space.txt_editcoupe,'string',num2str(coupe));
    coupe = Vr.coupe;
    get_slice

    if isfield(hdl.space,'project')
	if get(hdl.space.project,'value')
	  nb_poj_coupe = get(hdl.space.project,'userdata')+1;

	  mem = get(hdla.Im,'CData')*(nb_poj_coupe-1)/nb_poj_coupe;
	  ind=find(~isnan(slice));
	  mem(ind) = slice(ind);
	  slice = mem;

	  set(hdl.space.project,'userdata',nb_poj_coupe);
	end
    end

    new_img=0;
    if (hdla.Im==0),
      hold off;  plot(1,1);   new_img=1;
    else
      try
	set(hdla.Im,'CData',slice);
      catch
	fprintf('%s','handel problem; new color map ...')
	new_img=1;
      end
    end
    
    if new_img
      hdla.Im = imagesc(slice,'EraseMode','none'); 
      set(AxeNum,'userdata',hdla_num,'ydir','normal','xdir','normal')
      Axeshdl{hdla_num} = hdla; AxeshdlChanged
    end

dim = Vr.dim * Vr.M_rot(1:3,1:3);
vox = Vr.vox * Vr.M_rot(1:3,1:3);

%set the x axes dimention to get a scaled image
   if exist('set_axis')
     set(gca,'Xlim',[0 dim(1)]);   set(gca,'Ylim',[0 dim(2)])
     fov = vox.* dim;
%yyyooop
%fov = Vr.dim(1:3).*sqrt(sum(Vr.mat(1:3,1:3).^2));
%fov = 

     
     max_axes = hdl.view.max;
     pos_axe  = get(gca,'position');   

     ylength = max_axes(2);   xlength = max_axes(2) * fov(1)/fov(2);
     if xlength > max_axes(1);
       xlength = max_axes(1);    ylength = max_axes(1) * fov(2)/fov(1);
     end
     pos_axe(3) =xlength ; pos_axe(4) = ylength;

     hdla.cur_pos(3:4) = pos_axe(3:4);
     set(AxeNum,'position',pos_axe,'visible','on');   
     Axeshdl{hdla_num} = hdla; AxeshdlChanged
   end %   if exist('set_axis')


   str = ['/' num2str(dim(3))];
   set (hdl.space.txtcoupe,'string',str);

   if ~isempty(Pos{1})
     Ser  = str2num(get(hdl.Roi.disp,'string'));

     if exist('refreshbug');  return;end
     afficheMPos;
     nbroi = length(Pos);
     str = sprintf('%s\n/ %s','Roi ', num2str(nbroi) );
     set (hdl.Roi.txt,'string',str);
   else, nbroi=0; 
   end
     str = sprintf('%s\n/ %s','Roi ', num2str(nbroi) );
     set (hdl.Roi.txt,'string',str);

    
   if ~isempty(Tpos)
     Ser  = str2num(get(hdl.tpos_hdl.Series_disp,'string'));
     vvv = Vr.box_space;
     afficheTPos(Tpos,coupe,vvv,Vr.M_rot,hdla.Tpos,Ser);
   end
        

    if hdla.Bw
       figure(hdla.Bw);
       hold off
       imagesc(Bw(:,:,coupe));
    end

    if isfield(hdla,'histo')
%      if hdla.histo
%	keyboard
%      else
         cur_axe = gca;
	 axes(hdl.axe(2))
	 hdla2 = get(hdl.axe(2),'userdata');
	 hold off
         [n h] = hist(slice(:),128);
	 hdla.histo = bar(h,n,'r');
	 Axeshdl{hdla_num} = hdla2; %set(hdl.axe(2),'UserData',hdla2)
	 axes(cur_axe)
	 Axeshdl{hdla_num} = hdla ; %set(cur_axe,'UserData',hdla)
 %      end
     end

    AxeshdlChanged

    if ~isempty(Cont)
       Cont = contourc(Bw(:,:,coupe),1);  Cont(:,1)=[];
       set(hdla.Cont,'Xdata',Cont(1,:),'Ydata',Cont(2,:));
    end
    if hdla.grill(1)
       set(hdla.grill,'visible','off')
       set(hdla.grill,'visible','on')
    end
   
 
if exist('realy_refresh')

%  set(hdla.Im ,'visible','off');
%	set(hdl.Pos ,'visible','off');
%	set(hdl.grill,'visible','off');
%   set(hdla.Im ,'visible','on');
%	set(hdl.Pos ,'visible','on');
%	set(hdl.grill,'visible','on');
end



return
if(0)
%old version
    hold on
    set(hdl.space.txt_editcoupe,'string',num2str(coupe));
    
    set(hdl.Im,'CData',Volume(NumVol).data(:,:,coupe));
    
    if ~isempty(Pos)
       set(hdl.Pos,'Xdata',Pos(Pos(:,3)==coupe,2),'Ydata',Pos(Pos(:,3)==coupe,1),'visible','on' );
      
    end
    if ~isempty(P64)
      scale = NbLigne/DimFonc;

      set(hdl.Pos64,'Xdata',(P64(P64(:,3)==coupe,2)-0.5)*scale,'Ydata',(P64(P64(:,3)==coupe,1)-0.5)*scale);
    end
end
